name: Deploy to Docker

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/checkout@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
      # - name: Run tests
      #   run: |
      #     python -m unittest discover -s server/tests -p "*.py"

  aws_ecr_repository:
    name: Push Docker image to AWS ECR Repository
    needs: build
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      # IMAGE_DATABASE_TAG: travel-database
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push python Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: travel-notes
          IMAGE_TAG: travel-server
        run: |
          docker build -t ${IMAGE_TAG} ./server
          docker tag ${IMAGE_TAG}:latest $ECR_REGISTRY/${ECR_REPOSITORY}:${IMAGE_TAG}-latest
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}-latest

   # docker_hub:
  #   name: Push Docker image to Docker Hub
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build and push python Docker image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./server
  #         dockerfile: Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/travel-server:latest
 
  #     - name: Build and push mongodb Docker image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./mongodb
  #         dockerfile: Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/travel-database:latest

  #     - name: Cache Docker layers
  #       uses: actions/cache@v4
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-${{ github.sha }}